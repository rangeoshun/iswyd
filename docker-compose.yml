version: "3"
services:
  app:
    image: clojure:lein-2.8.1
    restart: always
    # stdin_open: true
    # tty: true
    volumes:
      - .:/app
      - /app/target
      - ../../.m2:/root/.m2
    working_dir: "/app"
    ports:
      - 3449:3449
      - 7002:7002
    entrypoint: lein figwheel app lib worker
    networks:
      - dev_net

  change_srv:
    image: clojure:lein-2.8.1
    restart: always
    ports:
      - 3450:3450
    hostname: change_srv
    volumes:
      - .:/app
      - /app/target
      - ../../.m2:/root/.m2
    working_dir: "/app"
    entrypoint: lein with-profile +change-srv-dev trampoline ring server-headless
    networks:
      - dev_net

  decode_srv:
    image: clojure:lein-2.8.1
    restart: always
    ports:
      - 3451:3451
    hostname: decode_srv
    volumes:
      - .:/app
      - /app/target
      - ../../.m2:/root/.m2
    working_dir: "/app"
    entrypoint: lein with-profile +decode-srv-dev trampoline ring server-headless
    networks:
      - dev_net

  row_srv:
    image: clojure:lein-2.8.1
    restart: always
    ports:
      - 3452:3452
    hostname: row_srv
    volumes:
      - .:/app
      - /app/target
      - ../../.m2:/root/.m2
    working_dir: "/app"
    entrypoint: lein with-profile +row-srv-dev trampoline ring server-headless
    networks:
      - dev_net

  kafka:
    image: spotify/kafka
    restart: always
    ports:
      - 9092:9092
      - 2181:2181
    hostname: kafka
    environment:
      TOPICS: changes
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
      AUTO_CREATE_TOPICS: 'true'
    networks:
      - dev_net

  mongo:
    image: mongo:3.4
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./data/db:/data
    command: "mongod"
    networks:
      - dev_net

  cadvisor:
    image: google/cadvisor
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080

volumes:
  target:
networks:
  dev_net:
